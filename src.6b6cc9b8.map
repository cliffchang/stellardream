{"version":3,"sources":["weightedChoice.ts","../node_modules/gaussian/lib/gaussian.js","stars.ts","../node_modules/alea/alea.js","planets.ts","starSystem.ts","index.ts"],"names":["exports","erfc","x","z","Math","abs","t","r","exp","ierfc","xx","sqrt","log","j","err","Gaussian","mean","variance","Error","standardDeviation","prototype","pdf","m","PI","e","pow","cdf","ppf","mul","d","scale","precision","dprecision","fromPrecisionMean","div","add","gaussian","sub","c","precisionmean","module"],"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Y,EAGZ,SAHY,CAAd;AAIA,aAAK,IAAL,GAAY,YAAY,KAAK,UAAjB,CAAZ;AAEA;AACA;AACA,aAAK,WAAL,GAAmB,oBAAoB,WAApB,EAAiC,WAAjC,CAAnB;AACH;AASL,WAAA,IAAA;AA1CA,CAAA,EAAA;AAAazNb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"src.6b6cc9b8.map","sourceRoot":"../src","sourcesContent":["export default function weightedRandom<T>(weights: Array<[T, number]>, normalizedValue: number): T {\n  let sumOfWeights = 0;\n  for (let item of weights) {\n    sumOfWeights += item[1];\n  }\n\n  const randomValue: number = normalizedValue * sumOfWeights;\n \n  let sumSoFar = 0;\n  for (let [value, weight] of weights) {\n    sumSoFar += weight;\n    if (randomValue <= sumSoFar) {\n      return value;\n    }\n  }\n\n  throw new Error(\"Choice error: \" + randomValue);\n}","(function(exports) {\n\n  // Complementary error function\n  // From Numerical Recipes in C 2e p221\n  var erfc = function(x) {\n    var z = Math.abs(x);\n    var t = 1 / (1 + z / 2);\n    var r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +\n            t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +\n            t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +\n            t * (-0.82215223 + t * 0.17087277)))))))))\n    return x >= 0 ? r : 2 - r;\n  };\n\n  // Inverse complementary error function\n  // From Numerical Recipes 3e p265\n  var ierfc = function(x) {\n    if (x >= 2) { return -100; }\n    if (x <= 0) { return 100; }\n\n    var xx = (x < 1) ? x : 2 - x;\n    var t = Math.sqrt(-2 * Math.log(xx / 2));\n\n    var r = -0.70711 * ((2.30753 + t * 0.27061) /\n            (1 + t * (0.99229 + t * 0.04481)) - t);\n\n    for (var j = 0; j < 2; j++) {\n      var err = erfc(r) - xx;\n      r += err / (1.12837916709551257 * Math.exp(-(r * r)) - r * err);\n    }\n\n    return (x < 1) ? r : -r;\n  };\n\n  // Models the normal distribution\n  var Gaussian = function(mean, variance) {\n    if (variance <= 0) {\n      throw new Error('Variance must be > 0 (but was ' + variance + ')');\n    }\n    this.mean = mean;\n    this.variance = variance;\n    this.standardDeviation = Math.sqrt(variance);\n  }\n\n  // Probability density function\n  Gaussian.prototype.pdf = function(x) {\n    var m = this.standardDeviation * Math.sqrt(2 * Math.PI);\n    var e = Math.exp(-Math.pow(x - this.mean, 2) / (2 * this.variance));\n    return e / m;\n  };\n\n  // Cumulative density function\n  Gaussian.prototype.cdf = function(x) {\n    return 0.5 * erfc(-(x - this.mean) / (this.standardDeviation * Math.sqrt(2)));\n  };\n\n  // Percent point function\n  Gaussian.prototype.ppf = function(x) {\n    return this.mean - this.standardDeviation * Math.sqrt(2) * ierfc(2 * x);\n  };\n\n  // Product distribution of this and d (scale for constant)\n  Gaussian.prototype.mul = function(d) {\n    if (typeof(d) === \"number\") {\n      return this.scale(d);\n    }\n    var precision = 1 / this.variance;\n    var dprecision = 1 / d.variance;\n    return fromPrecisionMean(\n        precision + dprecision, \n        precision * this.mean + dprecision * d.mean);\n  };\n\n  // Quotient distribution of this and d (scale for constant)\n  Gaussian.prototype.div = function(d) {\n    if (typeof(d) === \"number\") {\n      return this.scale(1 / d);\n    }\n    var precision = 1 / this.variance;\n    var dprecision = 1 / d.variance;\n    return fromPrecisionMean(\n        precision - dprecision, \n        precision * this.mean - dprecision * d.mean);\n  };\n\n  // Addition of this and d\n  Gaussian.prototype.add = function(d) {\n    return gaussian(this.mean + d.mean, this.variance + d.variance);\n  };\n\n  // Subtraction of this and d\n  Gaussian.prototype.sub = function(d) {\n    return gaussian(this.mean - d.mean, this.variance + d.variance);\n  };\n\n  // Scale this by constant c\n  Gaussian.prototype.scale = function(c) {\n    return gaussian(this.mean * c, this.variance * c * c);\n  };\n\n  var gaussian = function(mean, variance) {\n    return new Gaussian(mean, variance);\n  };\n\n  var fromPrecisionMean = function(precision, precisionmean) {\n    return gaussian(precisionmean / precision, 1 / precision);\n  };\n\n  exports(gaussian);\n})\n(typeof(exports) !== \"undefined\"\n    ? function(e) { module.exports = e; }\n    : function(e) { this[\"gaussian\"] = e; });\n","import weightedChoice from \"./weightedChoice\";\nimport gaussian from \"gaussian\";\n\nfunction normalizedToRange(min: number, max: number, val: number): number {\n  return min + (max - min) * val;\n}\n\n/* STARS */\n\nexport enum StarType {\n  /* Planets in HZ will be tidally locked very quickly, but about half of\n     all M dwarfs will have a planet in the HZ\n   */\n  M = \"M\",\n  /* Starting to look good. Kepler searches star types K-F.\n   */\n  K = \"K\",\n  G = \"G\", // the sun is a G2\n  F = \"F\",\n  /* Stars age too quickly - only support life for about 2 billion years. Life may\n     be microbial, but likely no trees.\n   */\n  A = \"A\",\n  B = \"B\",\n  /*\n  Planetary dust disks located within 1.6 light-years of O-type stars are\n  likely to be \"boiled off\" by superhot radiation and winds\n  (therefore O-type stars likely won't have planets)\n  */\n  O = \"O\"  \n}\n\n// http://lup.lub.lu.se/luur/download?func=downloadFile&recordOId=8867455&fileOId=8870454\nexport const StarTypeProbabilities = new Map<StarType, number>([\n  [StarType.M, 0.7645629],\n  [StarType.K, 0.1213592],\n  [StarType.G, 0.0764563],\n  [StarType.F, 0.0303398],\n  [StarType.A, 0.0060679],\n  [StarType.B, 0.0012136],\n  [StarType.O, 0.0000003],\n]);\n\nexport const StarTemperature = new Map<StarType, number>([\n  [StarType.M, 3850],\n  [StarType.K, 5300],\n  [StarType.G, 5920],\n  [StarType.F, 7240],\n  [StarType.A, 9500],\n  [StarType.B, 31000],\n  [StarType.O, 41000],\n]);\n\nexport const StarLuminosityMin = new Map<StarType, number>([\n  [StarType.M, 0.000158],\n  [StarType.K, 0.086],\n  [StarType.G, 0.58],\n  [StarType.F, 1.54],\n  [StarType.A, 4.42],\n  [StarType.B, 21.2],\n  [StarType.O, 26800],\n]);\n\nexport const StarLuminosityMax = new Map<StarType, number>([\n  [StarType.M, 0.086],\n  [StarType.K, 0.58],\n  [StarType.G, 1.54],\n  [StarType.F, 4.42],\n  [StarType.A, 21.2],\n  [StarType.B, 26800],\n  [StarType.O, 78100000],\n]);\n\nexport const StarRadiusMin = new Map<StarType, number>([\n  [StarType.M, 0.08],\n  [StarType.K, 0.7],\n  [StarType.G, 0.96],\n  [StarType.F, 1.15],\n  [StarType.A, 1.4],\n  [StarType.B, 1.8],\n  [StarType.O, 6.6],\n]);\n\nexport const StarRadiusMax = new Map<StarType, number>([\n  [StarType.M, 0.7],\n  [StarType.K, 0.96],\n  [StarType.G, 1.15],\n  [StarType.F, 1.4],\n  [StarType.A, 1.8],\n  [StarType.B, 6.6],\n  [StarType.O, 12],\n]);\n\n\n// http://www.vendian.org/mncharity/dir3/starcolor/\nexport const StarColors = new Map<StarType, string>([\n  [StarType.O, '#9bb0ff'],\n  [StarType.B, '#aabfff'],\n  [StarType.A, '#cad7ff'],\n  [StarType.F, '#f8f7ff'],\n  [StarType.G, '#fff4ea'],\n  [StarType.K, '#ffd2a1'],\n  [StarType.M, '#ffcc6f'],\n]);\n\n// http://www.solstation.com/habitable.htm\n/**\n* ~44% of F6-K3 stars with 0.5-1.5 stellar masses are likely binary/multiple star systems,\n* making stable orbits extremely unlikely unless the stars are close together.\n* \n* Inside HZ: \"water is broken up by stellar radiation into oxygen and hydrogen...\n* the freed hydrogen would escape to space due to the relatively puny\n* gravitational pull of small rocky planets like Earth\"\n* \n* Outside HZ: \"atmospheric carbon dioxide condenses...which eliminates its\n* greenhouse warming effect.\"\n* \n* Stars get brighter as they age, so HZ expands outward. CHZ = \"continuously habitable zone\"\n* over time.\n*/\nexport const HabitableZonePlanetLikelihoods = new Map<StarType, number>([\n  [StarType.M, 0.0002],\n  [StarType.K, 0.001],\n  [StarType.G, 0.002],\n  [StarType.F, 0.001],\n  // my sources don't discuss these star types, and they are rare, so just pick\n  // some random small values\n  [StarType.A, 0.0002],\n  [StarType.B, 0.00015],\n  [StarType.O, 0.0001],\n]);\n\n// \"normalized solar flux factor\"\n// http://www.solstation.com/habitable.htm\nconst SeffInner = new Map<StarType, number>([\n  [StarType.M, 1.05],\n  [StarType.K, 1.05],\n  [StarType.G, 1.41],\n  [StarType.F, 1.9],\n  [StarType.A, 0],\n  [StarType.B, 0],\n  [StarType.O, 0],\n]);\n\nconst SeffOuter = new Map<StarType, number>([\n  [StarType.M, 0.27],\n  [StarType.K, 0.27],\n  [StarType.G, 0.36],\n  [StarType.F, 0.46],\n  [StarType.A, 0],\n  [StarType.B, 0],\n  [StarType.O, 0],\n]);\n\nfunction computeHabitableZoneHelper(luminosity: number, seff: number): number {\n  return 1 * Math.pow(luminosity / seff, 0.5);\n}\n\nexport function computeHabitableZone(t: StarType, luminosity: number): [number, number] {\n  return [\n      computeHabitableZoneHelper(luminosity, SeffInner.get(t)!),\n      computeHabitableZoneHelper(luminosity, SeffOuter.get(t)!)]\n}\n\nexport function computeMass(luminosity: number): number {\n  // https://en.wikipedia.org/wiki/Mass%E2%80%93luminosity_relation\n  // and also \n  // http://lup.lub.lu.se/luur/download?func=downloadFile&recordOId=8867455&fileOId=8870454\n  let a = 0.23;\n  let b = 2.3;\n  if (luminosity > 0.03) {\n    a = 1;\n    b = 4;\n  }\n  if (luminosity > 16) {\n    a = 1.5;\n    b = 3.5;\n  }\n  if (luminosity > 54) {\n    a = 3200;\n    b = 1;\n  }\n  return Math.pow(luminosity / a, b);\n}\n\n/*\n// this is garbage and wrong, don't use this\n// might be able to salvage using this:\n// https://www.astro.princeton.edu/~gk/A403/constants.pdf\nexport function computeRadius(t: StarType, luminosity: number): number {\n  const temperature = StarTemperature.get(t)!;\n  const tempRatio = temperature / StarTemperature.get(StarType.G)!\n\n  return Math.sqrt(Math.pow(tempRatio, 4) / luminosity);\n}\n*/\n\n/*\n  https://arxiv.org/pdf/1511.07438.pdf\n  \n  According to this paper, metallicity distribution is best represented\n  by a combination of two Gaussians.\n\n  Units are in [Fe/H], which you should google. It's a measure of the\n  presence of iron vs the solar system on a logarithmic scale.\n*/\nexport function getMetallicityValue(aRandomNumber: number, n2: number): number {\n  const dist1 = gaussian(0.3, 0.1);\n  const dist2 = gaussian(-0.45, 0.1);\n  const val1 = dist1.ppf(aRandomNumber);\n  const val2 = dist2.ppf(aRandomNumber);\n  // According to stats.stackexchange.com there's a super mathy way to\n  // combine two Gaussian distributions, but using a weighted choice\n  // seems to produce similar results, so whatever.\n  return weightedChoice([[val1, 1.5], [val2, 0.5]], n2);\n}\n\nexport class Star {\n    starType: StarType;\n    luminosity: number;\n    mass: number;\n    radius: number;\n    color: string;\n    metallicity: number;\n\n    // _metallicity?: number;\n    // _metallicityValues: [number, number];\n\n    constructor(getRandom: any) {\n        let weights = Array<[StarType, number]>();\n        StarTypeProbabilities.forEach((v: number, k: StarType) => {\n          weights.push([k, v]);\n        });\n        this.starType = weightedChoice(weights, getRandom());\n        this.color = StarColors.get(this.starType)!;\n\n        const sizeValue = getRandom();\n        this.luminosity = normalizedToRange(\n          StarLuminosityMin.get(this.starType)!,\n          StarLuminosityMax.get(this.starType)!,\n          sizeValue);\n        this.radius = normalizedToRange(\n          StarRadiusMin.get(this.starType)!,\n          StarRadiusMax.get(this.starType)!,\n          sizeValue);\n        this.mass = computeMass(this.luminosity);\n\n        // this._metallicity = undefined;\n        // this._metallicityValues = [getRandom(), getRandom()];\n        this.metallicity = getMetallicityValue(getRandom(), getRandom());\n    }\n\n    // get metallicity(): number {\n    //   // this is expensive, so compute it lazily\n    //   if (this._metallicity === null) {\n    //     this._metallicity = getMetallicityValue(this._metallicityValues[0], this._metallicityValues[1]);\n    //   }\n    //   return this._metallicity!;\n    // }\n}","(function (root, factory) {\n  if (typeof exports === 'object') {\n      module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n      define(factory);\n  } else {\n      root.Alea = factory();\n  }\n}(this, function () {\n\n  'use strict';\n\n  // From http://baagoe.com/en/RandomMusings/javascript/\n\n  // importState to sync generator states\n  Alea.importState = function(i){\n    var random = new Alea();\n    random.importState(i);\n    return random;\n  };\n\n  return Alea;\n\n  function Alea() {\n    return (function(args) {\n      // Johannes Baagøe <baagoe@baagoe.com>, 2010\n      var s0 = 0;\n      var s1 = 0;\n      var s2 = 0;\n      var c = 1;\n\n      if (args.length == 0) {\n        args = [+new Date];\n      }\n      var mash = Mash();\n      s0 = mash(' ');\n      s1 = mash(' ');\n      s2 = mash(' ');\n\n      for (var i = 0; i < args.length; i++) {\n        s0 -= mash(args[i]);\n        if (s0 < 0) {\n          s0 += 1;\n        }\n        s1 -= mash(args[i]);\n        if (s1 < 0) {\n          s1 += 1;\n        }\n        s2 -= mash(args[i]);\n        if (s2 < 0) {\n          s2 += 1;\n        }\n      }\n      mash = null;\n\n      var random = function() {\n        var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n        s0 = s1;\n        s1 = s2;\n        return s2 = t - (c = t | 0);\n      };\n      random.uint32 = function() {\n        return random() * 0x100000000; // 2^32\n      };\n      random.fract53 = function() {\n        return random() + \n          (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n      };\n      random.version = 'Alea 0.9';\n      random.args = args;\n\n      // my own additions to sync state between two generators\n      random.exportState = function(){\n        return [s0, s1, s2, c];\n      };\n      random.importState = function(i){\n        s0 = +i[0] || 0;\n        s1 = +i[1] || 0;\n        s2 = +i[2] || 0;\n        c = +i[3] || 0;\n      };\n \n      return random;\n\n    } (Array.prototype.slice.call(arguments)));\n  }\n\n  function Mash() {\n    var n = 0xefc8249d;\n\n    var mash = function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n}));\n","import { Star } from \"./stars\";\n\nexport enum KeplerGrouping {\n    HotJupiter = \"HotJupiter\",\n    ColdGasGiant = \"ColdGasGiant\",\n    IceGiant = \"IceGiant\",\n    OceanWorld = \"OceanWorld\",\n    LavaWorld = \"LavaWorld\",\n    Rocky = \"Rocky\",\n}\n\n// https://medium.com/starts-with-a-bang/sorry-super-earth-fans-there-are-only-three-classes-of-planet-44f3da47eb64\nexport enum PlanetType {\n    Terran = \"Terran\",\n    Neptunian = \"Neptunian\",\n    Jovian = \"Jovian\",\n    Placeholder = \"Placeholder\",\n}\n\n// Units: 10^x earth-masses\n// https://arxiv.org/pdf/1603.08614v2.pdf%29\n/*\n    https://www.manyworlds.space/index.php/tag/hydrogen-and-helium-envelope/\n\n    \"...it appears that once a planet has a radius more than 1.5 or 1.6\n    times the size of Earth, it will most likely have a thick gas envelope of\n    hydrogen, helium and sometimes methane and ammonia around it.\"\n*/\nexport const PlanetTypeMassMin = new Map<PlanetType, number>([\n    [PlanetType.Terran, -1.3],      // ~mercury sized\n    [PlanetType.Neptunian, 0.22],   // ~1.6 earth masses\n    [PlanetType.Jovian, 2],\n]);\n\nexport const PlanetTypeMassMax = new Map<PlanetType, number>([\n    [PlanetType.Terran, 0.22],\n    [PlanetType.Neptunian, 2],\n    [PlanetType.Jovian, 3.5],\n]);\n\n// R = M^exponent\nexport const PlanetTypeRadiusExponent = new Map<PlanetType, number>([\n    [PlanetType.Terran, 0.28],\n    [PlanetType.Neptunian, 0.59],\n    [PlanetType.Jovian, -0.04],\n]);\n\nexport class Planet {\n    distance: number;\n    star: Star;\n    planetType: PlanetType;\n\n    constructor(\n        planetType: PlanetType,\n        star: Star,\n        distance: number)\n    {\n        this.planetType = planetType;\n        this.distance = distance;\n        this.star = star;\n    }\n}","import Alea from \"alea\";\n\nimport {Star, StarType, computeHabitableZone} from \"./stars\";\nimport {Planet, PlanetType} from \"./planets\";\nimport weightedRandom from \"./weightedChoice\";\n\nfunction normalizedToRange(min: number, max: number, val: number): number {\n  return min + (max - min) * val;\n}\n\nfunction shuffle<T>(a: Array<T>) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n/*\n    https://www.gemini.edu/node/12025\n\n    \"In our search, we could have found gas giants beyond orbital distances\n    corresponding to Uranus and Neptune in our own Solar System, but we didn’t\n    find any.\"\n*/\n\n/*\n    https://www.cfa.harvard.edu/news/2013-01\n\n    \"At Least One in Six Stars Has an Earth-sized Planet\"\n*/\n\n/*\n    https://en.wikipedia.org/wiki/Circumbinary_planet\n    https://en.wikipedia.org/wiki/Habitability_of_binary_star_systems\n\n    Many restrictions on circumbinary planets have not been implemented here\n*/\n\n/*\n    https://www.manyworlds.space/index.php/2018/07/09/the-architecture-of-solar-systems/\n    \n    Planets seem to have similar sizes as their neighbors\n*/\n\nexport function addPlanets(starSystem: StarSystem, getRandom: () => number) {\n    switch (starSystem.stars[0].starType) {\n    case (StarType.A):\n    case (StarType.B):\n    case (StarType.O):\n        // These behave differently so I'm skipping them for now.\n        // Planets may form at 100-1000au from the star, but will\n        // only be habitable for a few million years.\n        return;\n    }\n\n    if (getRandom() < 0.3) {\n        // Current research suggests that 70% of sunlike stars have terran\n        // or neptunian planets (see comment later). So in 30% of cases, just\n        // bail.\n        return;\n    }\n\n    /*\n        http://iopscience.iop.org/article/10.1086/428383/pdf\n        https://arxiv.org/pdf/1511.07438.pdf\n\n        \"One-quarter of the FGK-type stars with [Fe/H] > 0.3 dex harbor\n        Jupiter-like planets with orbital periods shorter than 4 yr. In\n        contrast, gas giant planets are detected around fewer than 3% of\n        the stars with subsolar metallicity. \"\n    */\n\n    /*\n    We can use that information to form a simple planet type distribution\n    strategy. If a star has high metallicity, we'll say gas giant probability\n    per plant is 30%; otherwise it'll be 6%.\n    */\n    const jovianWeight = starSystem.metallicity >= 0 ? 0.3 : 0.04;\n    // The others are eyeballed figures from https://www.popularmechanics.com/space/deep-space/a13733860/all-the-exoplanets-weve-discovered-in-one-small-chart/\n    const terrainWeight = 0.3;\n    const neptunianWeight = 0.6;\n\n    const [hzMin, hzMax] = computeHabitableZone(\n        starSystem.stars[0].starType, starSystem.stars[0].luminosity);\n\n    // Stick a planet slot in the habitable zone because I don't have anything\n    // else to go on. Then add slots toward and away from the sun based on\n    // the Titus-Bode law:\n    // https://en.wikipedia.org/wiki/Titius%E2%80%93Bode_law\n    // According to this paper it's pretty darn accurate:\n    // https://watermark.silverchair.com/stt1357.pdf?token=AQECAHi208BE49Ooan9kkhW_Ercy7Dm3ZL_9Cf3qfKAc485ysgAAAkYwggJCBgkqhkiG9w0BBwagggIzMIICLwIBADCCAigGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMXXlXIp7_lwD8QJsjAgEQgIIB-Z96njhcrt4HyhJSQ_02byW4uXVLfJlgORYjKns4IgHZ7hOohpgBhhuilHJ9CqVseHjZ2gRc6UxJ9zbWPMSEbR2ccKm93ziwbQIfl0cP7lLi50lTyffZyuW4klH9hF5usqCbX3mVLhrMVLaHRqpHY9ciTzJnLosk_FJJbYNV_OkvruGc0uY_6EtOkt13FZRxTG-Of3T9CfZj2L6PMTZxVTOMP-xY8TEDr20Kgxkwp-0DA9Lbec4SBgaEAMYSo8FJDHH_VZqYUE4H5BoUk3MRzaIbmGfCxttLGm96f-Pa0uYneyt6XZFXSUj9X7kAcN1wO0ul3pLBmhhY8dGYF_dFNKOnV3Q4O5yaFjtsJXrJheJh82UsyYmZo36QaZIC8c7h5fDluDz51JM-n_pdaI_Nj6DKXk1eisgd5wLj3MeZappwhTVDsRZnyfhLRkW6VWb0bm-FzcjEw6KvOZtJh9D7-jPyqc4Qnpdt5jLXyLqXJDOlUH1IYf0fJf1k_cw1jAPMHveHHEGrxwpZ1Jee7Q7gR1hZwkVBC4BzPq2K9a22SJ8Jgktr5PHi7RXSTeXVa9mlDTM8uqnXmwYdAu_y3SeyPvIJL7LZ7KKh_Z7FPqIwMjUHWDrY20FWHUl9oRlqthDT9CgEW1ECV9h6-MfEUlKMXUKf92FKxzICRlk\n\n    const planetAnchor = normalizedToRange(hzMin, hzMax, getRandom());\n    const numHotSlots = 5;\n    const numColdSlots = 5;\n    let planetSlots = [planetAnchor];\n\n    // Add slots away from the star\n    for (let i=0; i<numColdSlots; i++) {\n        planetSlots.push(planetSlots[planetSlots.length - 1] * normalizedToRange(1.1, 2, getRandom()));\n    }\n    // Add slots close to the star\n    for (let i=0; i<numHotSlots; i++) {\n        planetSlots.unshift(planetSlots[0] / normalizedToRange(1.1, 2, getRandom()));\n    }\n\n    /*\n        https://www.nasa.gov/mission_pages/kepler/news/17-percent-of-stars-have-earth-size-planets.html\n\n        \"Extrapolating from Kepler's currently ongoing observations and results\n        from other detection techniques, scientists have determined that nearly\n        all sun-like stars have planets.\"\n    */\n\n    /*\n        https://www.cfa.harvard.edu/news/2013-01\n\n        \"Altogether, the researchers found that 50 percent of stars have a\n        planet of Earth-size or larger in a close orbit. By adding larger\n        planets, which have been detected in wider orbits up to the orbital\n        distance of the Earth, this number reaches 70 percent.\"\n\n        \"for every planet size except gas giants, the type of star doesn't\n        matter.\"\n    */\n        \n    /*\n        http://www.pnas.org/content/111/35/12647\n\n        \"The HZ of M-type dwarfs corresponds to orbital periods of a few weeks\n        to a few months. Kepler’s current planet catalog is sufficient for\n        addressing statistics of HZ exoplanets orbiting M stars. The results\n        indicate that the average number of small (0.5–1.4 R⊕) HZ\n        (optimistic) planets per M-type main-sequence star is ∼0.5.\"\n\n        \"Collectively, the statistics emerging from the Kepler data suggest\n        that every late-type main-sequence star has at least one planet (of\n        any size), that one in six has an Earth-size planet within a\n        Mercury-like orbit, and that small HZ planets around M dwarfs abound.\"\n    */\n\n    const planetTypeChoices: Array<[PlanetType, number]> = [\n        [PlanetType.Terran, terrainWeight],\n        [PlanetType.Neptunian, neptunianWeight],\n        [PlanetType.Jovian, jovianWeight],\n    ]\n\n    let start = Math.floor(normalizedToRange(2, planetSlots.length - 2, getRandom()));\n    const forceHZTerran = starSystem.stars[0].starType == StarType.M && getRandom() < 0.5;\n    if (forceHZTerran) {\n        start = numHotSlots;\n    }\n    let left = start;\n    let right = start;\n\n    function makePlanet(i: number, t?: PlanetType) {\n        let starType = weightedRandom(planetTypeChoices, getRandom());\n        if (t) { starType = t; }\n        starSystem.planets.push(new Planet(\n            starType,\n            starSystem.stars[0],\n            planetSlots[i]));\n    }\n\n    if (forceHZTerran) {\n        console.log(planetSlots[start] > hzMin, planetSlots[start] < hzMax, planetSlots[start], planetAnchor);\n        makePlanet(start, PlanetType.Terran);\n    } else {\n        makePlanet(start);\n    }\n\n    // https://www.nasa.gov/image-feature/ames/planetary-systems-by-number-of-known-planets\n    // Just eyeballing the graph, and with the assumption that many exoplanets\n    // are not yet discovered in known systems, let's say that there's a 30% chance\n    // of continuing our planet-adding loop each time.\n    // And FYI, it's totally fine to have 2+ gas giants in a system. This paper\n    // describes one with SIX: https://arxiv.org/pdf/1710.07337.pdf\n    while(getRandom() < 0.3) {\n        left -= 1;\n        // Skip a slot sometimes just for fun\n        if (left > 0 && getRandom() < 0.5) left -= 1;\n        makePlanet(left);\n    }\n\n    while(getRandom() < 0.3) {\n        right += 1;\n        // Skip a slot sometimes just for fun\n        if (right < planetSlots.length - 1 && getRandom() < 0.5) right += 1;\n        makePlanet(right);\n    }\n\n    // for (let s of originalSlots) {\n    //     starSystem.planets.push(new Planet(\n    //         PlanetType.Placeholder, starSystem.stars[0], s));\n    // }\n}\n\nexport class StarSystem {\n    seed: number;\n    stars: Array<Star>;\n    planets: Array<Planet>;\n    // metallicity: number;\n\n    constructor(seed: number) {\n        this.seed = seed;\n\n        const alea = new (Alea as any)(seed);\n\n        this.stars = [new Star(alea)];\n        // this.metallicity = this.stars[0].metallicity;\n        \n        /*\n          Roughly 44% of star systems have two stars. The stars orbit each\n          other at distances of \"zero-ish\" to 1 light year. Alpha Centauri,\n          for example, has Proxima Centauri at 15,000 AU (~0.23 light years).\n\n          This model will only look at \"close binaries\" (hand-wavingly\n          estimated at 1/4 of binary systems), and say their planets are in\n          orbit of both stars simultaneously. Other binaries will be treated\n          like separate star systems. Research shows that even non-close\n          binaries make planetary orbits eccentric over time (billions of\n          years), but this would have no effect on colonization potential by\n          humans (I suppose) except as it relates to the development of\n          human-relevant life.\n         */\n        if (alea() < 0.25) {\n            this.stars.push(new Star(alea));\n            // this.metallicity = Math.max(this.metallicity, this.stars[1].metallicity);\n\n            // One strategy for generating the second star would be to force\n            // it to be smaller than the first, but it's simpler to just\n            // generate them independently and sort by mass.\n            this.stars = this.stars.sort((a, b) => {\n                return b.mass - a.mass;\n            });\n        }\n\n        this.planets = [];\n        addPlanets(this, alea);\n    }\n\n    get metallicity(): number {\n        let metallicity: number = this.stars[0].metallicity;\n        for (let s of this.stars) {\n            metallicity = Math.max(metallicity, s.metallicity);\n        }\n        return metallicity;\n    }\n}","import {\n    // StarTypeProbabilities,\n    StarType,\n    // HabitableZonePlanetLikelihoods,\n    computeHabitableZone,\n    // getMetallicityValue,\n} from \"./stars\";\nimport {StarSystem} from \"./starSystem\";\n\n/// Tweak probability values to make planets more habitable and life-infested\n// function cheatStars() {\n//     StarTypeProbabilities.set(StarType.K, StarTypeProbabilities.get(StarType.K)! + 0.5);\n//     StarTypeProbabilities.set(StarType.G, StarTypeProbabilities.get(StarType.G)! + 0.5);\n//     StarTypeProbabilities.set(StarType.F, StarTypeProbabilities.get(StarType.F)! + 0.5);\n\n//     // Cheat so about half of G-type stars have a planet in their habitable zones\n//     for (let k of Object.keys(StarType)) {\n//         const t = StarType[k as keyof typeof StarType];\n//         HabitableZonePlanetLikelihoods.set(t, HabitableZonePlanetLikelihoods.get(t)! * 250);\n//     }\n// }\n// cheatStars();\n\n// main\nconst main = document.getElementById(\"js-main\");\nconst seed = Date.now();\n\nif (main) {\n    main.innerHTML = '';\n    for (let i=0; i<102; i++) {\n        const system = new StarSystem(seed + i);\n\n        const systemEl = document.createElement('div');\n        systemEl.className = 'system';\n\n        for (let star of system.stars) {\n            const starEl = document.createElement('div');\n            systemEl.appendChild(starEl);\n            starEl.className = 'star';\n            starEl.style.backgroundColor = star.color;\n            starEl.innerHTML = star.starType == StarType.M ? \"\" : star.starType;\n            starEl.title = JSON.stringify(star, null, 2);\n\n            const minStarSize = 0.08;\n            const minPixelSize = 3;\n            const w = minPixelSize / minStarSize * star.radius;\n            starEl.style.width = w.toString() + 'px';\n            starEl.style.height = w.toString() + 'px';\n            starEl.style.borderRadius = (w / 2).toString() + 'px';\n\n            // console.table(system.stars[0]);\n        }\n\n        const separatorEl = document.createElement('div');\n        systemEl.appendChild(separatorEl);\n        separatorEl.className = 'planet-separator';\n\n        const planetsEl = document.createElement('div');\n        systemEl.appendChild(planetsEl);\n        planetsEl.className = 'planets-container';\n\n        const distanceFactor = 50;\n\n        const hzEl = document.createElement('div');\n        planetsEl.appendChild(hzEl);\n        hzEl.className = 'hz-indicator';\n        const [hzMin, hzMax] = computeHabitableZone(system.stars[0].starType, system.stars[0].luminosity);\n        hzEl.style.left = hzMin * distanceFactor + \"px\";\n        hzEl.style.width = (hzMax - hzMin) * distanceFactor + \"px\";\n\n        let maxDistance = 1;\n        for (let planet of system.planets) {\n            const planetEl = document.createElement('div');\n            planetsEl.appendChild(planetEl);\n            planetEl.className = \"planet-\" + planet.planetType.toString().toLowerCase();\n            planetEl.style.position = 'absolute';\n            planetEl.style.left = planet.distance * distanceFactor + \"px\";\n            planetEl.title = JSON.stringify(planet, null, 2);\n            maxDistance = Math.max(maxDistance, planet.distance);\n\n            planetsEl.style.backgroundColor = 'lightblue';\n        }\n        planetsEl.style.width = (maxDistance * distanceFactor) + 100 + \"px\";\n\n        main.appendChild(systemEl);\n    }\n}\n\n// Dumb visual check of the metallicity probability distribution\n// function testMetallicity() {\n//     if (document.body.children[0].tagName == 'CANVAS') {\n//         document.body.removeChild(document.body.children[0]);\n//     }\n\n//     const buckets: any = {};\n//     let maxCount = 0;\n//     let min = 0;\n//     let max = 0;\n//     const mult = 100;\n//     for(let i=0; i<100000; i++) {\n//         const val = getMetallicityValue(Math.random(), Math.random());\n//         const roundedVal = Math.floor(val * mult) / mult;\n//         min = Math.min(min, roundedVal);\n//         max = Math.max(max, roundedVal);\n//         if (!buckets[roundedVal]) buckets[roundedVal] = 0;\n//         buckets[roundedVal] += 1;\n//         maxCount = Math.max(maxCount, buckets[roundedVal]);\n//     }\n//     console.log(maxCount);\n\n//     const height = 200;\n//     const factor = height / maxCount;\n\n//     const canvasEl = document.createElement('canvas');\n//     canvasEl.width = (max - min) * mult;\n//     canvasEl.height = height;\n//     canvasEl.style.backgroundColor = 'white';\n//     const ctx = canvasEl.getContext('2d');\n//     if (!ctx) return;\n\n//     ctx.fillStyle = 'black';\n\n//     for(let i=min * mult; i<max * mult; i+=1) {\n//         const k = i / mult;\n//         const val = buckets[k];\n\n//         switch (k) {\n//         case 0:\n//             ctx.fillStyle = 'red';\n//             break;\n//         case 0.3:\n//         case -0.45:\n//             ctx.fillStyle = 'lightgreen';\n//             break;\n//         case 1:\n//             ctx.fillStyle = 'cyan';\n//             break;\n//         case -1:\n//             ctx.fillStyle = 'yellow';\n//             break;\n//         default:\n//             ctx.fillStyle = 'black';\n//             break;\n//         }\n//         ctx.fillRect(i - (min * mult), height - val * factor, 1, val * factor);\n//     }\n//     console.log(buckets);\n\n//     document.body.insertBefore(canvasEl, document.body.children[0]);\n// }\n// testMetallicity();"]}